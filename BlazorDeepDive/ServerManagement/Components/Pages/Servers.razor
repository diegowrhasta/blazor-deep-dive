@page "/servers"
@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br/>
<br/>
<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card">
                    <img class="card-img-top" src="@($"/images/{city}.png")" alt="Card image cap">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br/>
<ul>
    @foreach (var server in servers)
    {
        <li>
            @server.Name in @server.City is
            <span style="color: @(server.IsOnline ? "green" : "red")">
                @(server.IsOnline ? "online" : "offline")
            </span>
            <a href="/servers/edit/@server.Id" class="btn btn-link">Edit</a>
            <EditForm
                Model="server"
                FormName="@($"server-{server.Id}-form")"
                OnValidSubmit="@(() => DeleteServer(server))">
                <button type="submit" class="btn btn-primary">
                    Delete
                </button>
            </EditForm>
        </li>
    }
</ul>
<a href="/servers/add" class="btn btn-primary">Add Server</a>

@code {
    private List<Server> servers = ServersRepository.GetServersByCity("Toronto");
    private List<string> cities = CitiesRepository.Cities;

    private void DeleteServer(Server server)
    {
        if (server.Id <= 0)
        {
            return;
        }

        ServersRepository.DeleteServer(server.Id);
        // servers = ServersRepository.GetServersByCity("Toronto");
        NavigationManager.Refresh();
    }

}