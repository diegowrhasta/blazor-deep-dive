@inject NavigationManager NavigationManager

@if (Server is null)
{
    return;
}

<li style="background-color: @GetBackgroundColor()" @key="Server.Id">
    @Server.Name in @Server.City is
    <span style="color: @(Server.IsOnline ? "green" : "red")">
        @(Server.IsOnline ? "online" : "offline")
    </span>
    @if (Server.IsOnline)
    {
        <text>@(GetRandomPeopleNumber())</text>
    }
    <button class="@($"ms-2 btn btn-outline-{CalculateButtonType(Server.IsOnline)}")" @onclick="UpdateServerStatus">
        @(CalculateButtonText(Server.IsOnline))
    </button>
    <a href="/Servers/edit/@Server.Id" class="btn btn-link">Edit</a>
    <EditForm
        Model="Server"
        FormName="@($"Server-{Server.Id}-form")"
        OnValidSubmit="@(() => DeleteServer(Server))">
        <button type="submit" class="btn btn-primary">
            Delete
        </button>
    </EditForm>
</li>

@code {
    [Parameter] public Server? Server { get; set; }

    [CascadingParameter(Name = "SelectedCity")]
    public string? SelectedCity { get; set; }

    private string GetBackgroundColor()
    {
        return SelectedCity switch
        {
            "Toronto" => "powderblue",
            "Montreal" => "lightgray",
            "Ottawa" => "palegreen",
            "Calgary" => "pink",
            _ => "white"
        };
    }

    private static string GetRandomPeopleNumber()
    {
        var randomInt = new Random().Next(minValue: 1, maxValue: 15);

        return $" ({randomInt})";
    }

    private static string CalculateButtonType(bool isOnline) => !isOnline
        ? "success"
        : "danger";

    private static string CalculateButtonText(bool isOnline) => isOnline
        ? "Turn Off"
        : "Turn On";

    private void UpdateServerStatus()
    {
        if (Server is null)
        {
            return;
        }

        Server.IsOnline = !Server.IsOnline;
    }

    private void DeleteServer(Server server)
    {
        if (server.Id <= 0)
        {
            return;
        }

        ServersRepository.DeleteServer(server.Id);
        // Servers = ServersRepository.GetServersByCity("Toronto");
        NavigationManager.Refresh(forceReload: true);
    }

}